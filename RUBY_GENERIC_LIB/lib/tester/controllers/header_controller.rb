# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # HeaderController
  class HeaderController < BaseController
    def initialize(config, http_call_back: nil)
      super(config, http_call_back: http_call_back)
    end

    # Sends a single header params
    # @param [String] custom_header Required parameter: Example:
    # @param [String] value Required parameter: Represents the value of the
    # custom header
    # @return [ServerResponse] response from the API call
    def send_headers(custom_header,
                     value)
      # Validate required parameters.
      validate_parameters(
        'custom_header' => custom_header,
        'value' => value
      )
      # Prepare query url.
      _query_builder = config.get_base_uri
      _query_builder << '/header'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json',
        'custom-header' => custom_header
      }

      # Prepare form parameters.
      _parameters = {
        'value' => value
      }
      _parameters = APIHelper.form_encode_parameters(_parameters)

      # Prepare and execute HttpRequest.
      _request = config.http_client.post(
        _query_url,
        headers: _headers,
        parameters: _parameters
      )
      _response = execute_request(_request)

      # Validate response against endpoint and global error codes.
      return nil if _response.status_code == 404
      validate_response(_response)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_response.raw_body)
      ServerResponse.from_hash(decoded)
    end
  end
end
