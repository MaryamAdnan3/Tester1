# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'employee_comp'

module Tester
  # Developer Model.
  class Developer < EmployeeComp
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :team

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :designation

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :role

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['team'] = 'team'
      @_hash['designation'] = 'designation'
      @_hash['role'] = 'role'
      @_hash = super().merge(@_hash)
      @_hash
    end

    def initialize(address = nil,
                   cell_number = nil,
                   company_name = nil,
                   designation = nil,
                   first_name = nil,
                   id = nil,
                   last_name = nil,
                   role = nil,
                   team = nil,
                   company = nil,
                   additional_properties = {})
      @team = team
      @designation = designation
      @role = role

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end

      # Call the constructor of the base class
      super(address,
            cell_number,
            company_name,
            first_name,
            id,
            last_name,
            company)
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      address = hash['address']
      cell_number = hash['cell number']
      company_name = hash['company name']
      designation = hash['designation']
      first_name = hash['first name']
      id = hash['id']
      last_name = hash['last name']
      role = hash['role']
      team = hash['team']
      company = hash['company']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Developer.new(address,
                    cell_number,
                    company_name,
                    designation,
                    first_name,
                    id,
                    last_name,
                    role,
                    team,
                    company,
                    hash)
    end
  end
end
