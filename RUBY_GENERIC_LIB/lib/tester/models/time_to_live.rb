# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # TimeToLive Model.
  class TimeToLive < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :deadline

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :delete_after_hours

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['deadline'] = 'deadline'
      @_hash['delete_after_hours'] = 'deleteAfterHours'
      @_hash
    end

    def initialize(deadline = nil,
                   delete_after_hours = nil,
                   additional_properties = {})
      @deadline = deadline
      @delete_after_hours = delete_after_hours

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      deadline = hash['deadline']
      delete_after_hours = hash['deleteAfterHours']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      TimeToLive.new(deadline,
                     delete_after_hours,
                     hash)
    end
  end
end
