# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # Imaging Model.
  class Imaging < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :time

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :location

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['time'] = 'time'
      @_hash['location'] = 'location'
      @_hash
    end

    def initialize(location = nil,
                   name = nil,
                   time = nil,
                   additional_properties = {})
      @name = name
      @time = time
      @location = location

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      location = hash['location']
      name = hash['name']
      time = hash['time']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Imaging.new(location,
                  name,
                  time,
                  hash)
    end
  end
end
