# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # Signer Model.
  class Signer < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :url

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :links

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :external_signer_id

    # TODO: Write general description for this method
    # @return [RedirectSettings]
    attr_accessor :redirect_settings

    # TODO: Write general description for this method
    # @return [SignatureType]
    attr_accessor :signature_type

    # TODO: Write general description for this method
    # @return [Ui]
    attr_accessor :ui

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :tags

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :order

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :required

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['url'] = 'url'
      @_hash['links'] = 'links'
      @_hash['external_signer_id'] = 'externalSignerId'
      @_hash['redirect_settings'] = 'redirectSettings'
      @_hash['signature_type'] = 'signatureType'
      @_hash['ui'] = 'ui'
      @_hash['tags'] = 'tags'
      @_hash['order'] = 'order'
      @_hash['required'] = 'required'
      @_hash
    end

    def initialize(external_signer_id = nil,
                   id = nil,
                   links = nil,
                   order = nil,
                   redirect_settings = nil,
                   required = nil,
                   signature_type = nil,
                   tags = nil,
                   ui = nil,
                   url = nil,
                   additional_properties = {})
      @id = id
      @url = url
      @links = links
      @external_signer_id = external_signer_id
      @redirect_settings = redirect_settings
      @signature_type = signature_type
      @ui = ui
      @tags = tags
      @order = order
      @required = required

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      external_signer_id = hash['externalSignerId']
      id = hash['id']
      links = hash['links']
      order = hash['order']
      if hash['redirectSettings']
        redirect_settings = RedirectSettings.from_hash(hash['redirectSettings'])
      end
      required = hash['required']
      signature_type = SignatureType.from_hash(hash['signatureType']) if
        hash['signatureType']
      tags = hash['tags']
      ui = Ui.from_hash(hash['ui']) if hash['ui']
      url = hash['url']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Signer.new(external_signer_id,
                 id,
                 links,
                 order,
                 redirect_settings,
                 required,
                 signature_type,
                 tags,
                 ui,
                 url,
                 hash)
    end
  end
end
