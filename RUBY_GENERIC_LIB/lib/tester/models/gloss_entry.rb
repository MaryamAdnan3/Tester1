# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # GlossEntry Model.
  class GlossEntry < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :sort_as

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :gloss_term

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :acronym

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :abbrev

    # TODO: Write general description for this method
    # @return [GlossDef]
    attr_accessor :gloss_def

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :gloss_see

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'ID'
      @_hash['sort_as'] = 'SortAs'
      @_hash['gloss_term'] = 'GlossTerm'
      @_hash['acronym'] = 'Acronym'
      @_hash['abbrev'] = 'Abbrev'
      @_hash['gloss_def'] = 'GlossDef'
      @_hash['gloss_see'] = 'GlossSee'
      @_hash
    end

    def initialize(abbrev = nil,
                   acronym = nil,
                   gloss_def = nil,
                   gloss_see = nil,
                   gloss_term = nil,
                   id = nil,
                   sort_as = nil,
                   additional_properties = {})
      @id = id
      @sort_as = sort_as
      @gloss_term = gloss_term
      @acronym = acronym
      @abbrev = abbrev
      @gloss_def = gloss_def
      @gloss_see = gloss_see

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      abbrev = hash['Abbrev']
      acronym = hash['Acronym']
      gloss_def = GlossDef.from_hash(hash['GlossDef']) if hash['GlossDef']
      gloss_see = hash['GlossSee']
      gloss_term = hash['GlossTerm']
      id = hash['ID']
      sort_as = hash['SortAs']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      GlossEntry.new(abbrev,
                     acronym,
                     gloss_def,
                     gloss_see,
                     gloss_term,
                     id,
                     sort_as,
                     hash)
    end
  end
end
