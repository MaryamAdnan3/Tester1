# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # Feed Model.
  class Feed < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :feed_url

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :link

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :author

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :type

    # TODO: Write general description for this method
    # @return [List of Entry]
    attr_accessor :entries

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['feed_url'] = 'feedUrl'
      @_hash['title'] = 'title'
      @_hash['link'] = 'link'
      @_hash['author'] = 'author'
      @_hash['description'] = 'description'
      @_hash['type'] = 'type'
      @_hash['entries'] = 'entries'
      @_hash
    end

    def initialize(author = nil,
                   description = nil,
                   entries = nil,
                   feed_url = nil,
                   link = nil,
                   title = nil,
                   type = nil,
                   additional_properties = {})
      @feed_url = feed_url
      @title = title
      @link = link
      @author = author
      @description = description
      @type = type
      @entries = entries

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      author = hash['author']
      description = hash['description']
      # Parameter is an array, so we need to iterate through it
      entries = nil
      unless hash['entries'].nil?
        entries = []
        hash['entries'].each do |structure|
          entries << (Entry.from_hash(structure) if structure)
        end
      end
      feed_url = hash['feedUrl']
      link = hash['link']
      title = hash['title']
      type = hash['type']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Feed.new(author,
               description,
               entries,
               feed_url,
               link,
               title,
               type,
               hash)
    end
  end
end
