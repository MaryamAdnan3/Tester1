# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # Status Model.
  class Status < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :document_status

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :completed_packages

    # TODO: Write general description for this method
    # @return [Object]
    attr_accessor :attachment_packages

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['document_status'] = 'documentStatus'
      @_hash['completed_packages'] = 'completedPackages'
      @_hash['attachment_packages'] = 'attachmentPackages'
      @_hash
    end

    def initialize(attachment_packages = nil,
                   completed_packages = nil,
                   document_status = nil,
                   additional_properties = {})
      @document_status = document_status
      @completed_packages = completed_packages
      @attachment_packages = attachment_packages

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      attachment_packages = hash['attachmentPackages']
      completed_packages = hash['completedPackages']
      document_status = hash['documentStatus']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Status.new(attachment_packages,
                 completed_packages,
                 document_status,
                 hash)
    end
  end
end
