# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # GlossDef Model.
  class GlossDef < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :para

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :gloss_see_also

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['para'] = 'para'
      @_hash['gloss_see_also'] = 'GlossSeeAlso'
      @_hash
    end

    def initialize(gloss_see_also = nil,
                   para = nil,
                   additional_properties = {})
      @para = para
      @gloss_see_also = gloss_see_also

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      gloss_see_also = hash['GlossSeeAlso']
      para = hash['para']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      GlossDef.new(gloss_see_also,
                   para,
                   hash)
    end
  end
end
