# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # Entry Model.
  class Entry < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :link

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :author

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :published_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :content_snippet

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :content

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :categories

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['title'] = 'title'
      @_hash['link'] = 'link'
      @_hash['author'] = 'author'
      @_hash['published_date'] = 'publishedDate'
      @_hash['content_snippet'] = 'contentSnippet'
      @_hash['content'] = 'content'
      @_hash['categories'] = 'categories'
      @_hash
    end

    def initialize(author = nil,
                   categories = nil,
                   content = nil,
                   content_snippet = nil,
                   link = nil,
                   published_date = nil,
                   title = nil,
                   additional_properties = {})
      @title = title
      @link = link
      @author = author
      @published_date = published_date
      @content_snippet = content_snippet
      @content = content
      @categories = categories

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      author = hash['author']
      categories = hash['categories']
      content = hash['content']
      content_snippet = hash['contentSnippet']
      link = hash['link']
      published_date = hash['publishedDate']
      title = hash['title']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Entry.new(author,
                categories,
                content,
                content_snippet,
                link,
                published_date,
                title,
                hash)
    end
  end
end
