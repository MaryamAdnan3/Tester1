# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # Glossary Model.
  class Glossary < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [GlossDiv]
    attr_accessor :gloss_div

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['title'] = 'title'
      @_hash['gloss_div'] = 'GlossDiv'
      @_hash
    end

    def initialize(gloss_div = nil,
                   title = nil,
                   additional_properties = {})
      @title = title
      @gloss_div = gloss_div

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      gloss_div = GlossDiv.from_hash(hash['GlossDiv']) if hash['GlossDiv']
      title = hash['title']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      Glossary.new(gloss_div,
                   title,
                   hash)
    end
  end
end
