# tester
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Tester
  # SignatureType Model.
  class SignatureType < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :mechanism

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :on_eaccept_use_hand_written_signature

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['mechanism'] = 'mechanism'
      @_hash['on_eaccept_use_hand_written_signature'] =
        'onEacceptUseHandWrittenSignature'
      @_hash
    end

    def initialize(mechanism = nil,
                   on_eaccept_use_hand_written_signature = nil,
                   additional_properties = {})
      @mechanism = mechanism
      @on_eaccept_use_hand_written_signature =
        on_eaccept_use_hand_written_signature

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      mechanism = hash['mechanism']
      on_eaccept_use_hand_written_signature =
        hash['onEacceptUseHandWrittenSignature']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      SignatureType.new(mechanism,
                        on_eaccept_use_hand_written_signature,
                        hash)
    end
  end
end
